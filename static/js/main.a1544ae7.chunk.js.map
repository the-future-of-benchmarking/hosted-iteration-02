{"version":3,"sources":["getWeb3.js","components/TimeLine.jsx","components/StartScreen.jsx","components/Menu.jsx","App.js","serviceWorker.js","index.js","../prb-math/dist/helpers/math.js","Synchronization.js","../prb-math/dist/helpers/constants.js","numberUtil.js","BenchmarkClient.js","../prb-math/dist/helpers/numbers.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","console","log","web3","Web3","request","method","length","reqAccounts","accounts","events","status","date","icon","color","content","customizedContent","item","title","customizedMarker","className","style","backgroundColor","TimeLine","value","align","marker","StartScreen","Menu","navigateToPage","path","props","history","push","items","label","command","process","model","Component","withRouter","History","createBrowserHistory","App","componentDidMount","eth","net","getId","networkId","setState","currentAccount","client","BenchmarkClient","on","handleChainChanged","handleAccountsChanged","showPersistentError","error","showError","message","toast","current","show","severity","summary","detail","life","sticky","showInfo","state","storageValue","contract","bind","React","createRef","_chainId","location","reload","this","ParticipateScreen","lazy","BenchmarkCreationScreen","ImprintScreen","ArchitectureScreen","ref","fallback","exact","Boolean","hostname","match","PrimeReact","ripple","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Object","defineProperty","exports","mbn","sqrt","pow","log2","log10","ln","gm","floor","exp2","exp","ceil","mathjs_1","math","create","all","number","precision","bignumber","x","toString","y","mul","attributes","Synchronization","actualized","DateTime","fromISO","refresh","now","diff","localforage","keys","entries","Array","from","Set","map","e","split","returnValues","getItem","address","data","foundData","i","element","needsActualization","contribution","key","setItem","removeItem","foundItem","updateItem","toISO","clear","__importDefault","mod","__esModule","SQRT_MAX_UD60x18_DIV_BY_SCALE","SQRT_MAX_SD59x18_DIV_BY_SCALE","SQRT_MAX_UD60x18","SQRT_MAX_SD59x18","SCALE","PI","MIN_WHOLE_SD59x18","MIN_SD59x18","MAX_WHOLE_UD60x18","MAX_WHOLE_SD59x18","MAX_UD60x18","MAX_SD59x18","HALF_SCALE","EPSILON_MAGNITUDE","EPSILON","E","evm_fp_1","numbers_1","default","bn","toPrecision","num","BigNumber","fp","fromPrecision","numalike","formatted","formatFixed","toNumber","BlockChainInteractor","call","estimateGas","gasestimate","getGasPrice","gasprice","round","toFixed","send","gas","gasPrice","str","utils","padLeft","toHex","getAccounts","account","BenchmarkFactory","benchmarkName","lowerBound","upperBound","benchmarkUnit","desc","Error","BenchMark","Contract","benchmarkContract","abi","deploy","bytecode","arguments","toWeirdString","deployerFn","executewithGas","returnValue","_address","provider","BenchMarkInstance","force","storageItem","methods","benchmark","result","response","name","description","sum","upper_bound","lower_bound","unit","hexToUtf8","addItem","AggregateReady","participate","internalContribution","bestRating","best","average","averageRating","averageRated","parseInt","includes","replace","JSON","parse","substring","bignumber_1","from_exponential_1","xs"],"mappings":"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","file":"static/js/main.a1544ae7.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        \n        try {\n          console.log(\"window.ethereum\")\n        const web3 = new Web3(window.ethereum);\n        console.log(\"a\")\n        \n        \n\n        let accounts = await window.ethereum.request({ method: 'eth_accounts' })\n        if(accounts.length === 0){\n          reject(\"Select an account\")\n        }\n        \n\n        let reqAccounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n        \n\n          // Accounts now exposed\n          resolve({web3, ethereum: window.ethereum, accounts: reqAccounts});\n        } catch (error) {\n          reject(\"Zugriff auf MetaMask fehlgeschlagen, bitte Seite neu laden\")\n          \n        }\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        reject(\"Zugriff auf geeignete Ethereum Erweiterung (wie z.B. MetaMask) fehlgeschlagen. Bitte installieren sie MetaMask\")\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from \"react\";\nimport { Timeline } from 'primereact/timeline';\nimport { Card } from 'primereact/card';\nexport const events = [\n    { status: 'Benchmark wird erstellt', date: '15/10/2020 10:30', icon: 'pi pi-cog', color: \"#2196F3\", content: \"Der Benchmark wird als Smart Contract von einer initiierende Partei auf einer Etherum-basierten Blockchain online gestellt.\" },\n    { status: 'Benchmark wird an Nutzende verteilt', date: '15/10/2020 14:00', icon: 'pi pi-cog', color: '#607D8B', content: \"Die Nutzenden erhalten die Adresse des Smart Contracts, die sie in ihre Webanwendung eintragen können.\" },\n    { status: 'Nutzende tragen eigene Daten ein', date: '15/10/2020 16:15', icon: 'pi pi-pencil', color: '#607D8B', content: \"Die Nutzenden tragen eigene Werte innerhalb der vorgegebenen Wertegrenzen ein.\" },\n    { status: 'Warten auf andere Nutzende', icon: \"pi pi-spin pi-spinner\", color: '#607D8B', content: \"Die Nutzenden warten auf die Eintragungen anderer Nutzenden\"},\n    { status: 'Ab > 3 Ergebnissen ist das Resultat zugänglich', date: '16/10/2020 10:00', icon: 'pi pi-check', color: '#4caf50', content: \"Sobald die Marke von drei eingetragenen Werten überschritten wird, können die Nutzenden das aktuelle Resultat einsehen.\" }\n];\n\nconst customizedContent = (item) => {\n    return (\n        <Card title={item.status}>\n            {item.content}\n        </Card>\n    );\n};\n\nconst customizedMarker = (item) => {\n        return (\n        <span className=\"custom-marker p-shadow-2\" style={{ backgroundColor: item.color }}>\n            <i className={item.icon}></i>\n        </span>\n    );\n};\n\nexport function TimeLine(){\n  return(<Timeline value={events} align=\"alternate\" content={customizedContent} marker={customizedMarker} className=\"p-p-0\"/>)\n}","import React from \"react\";\nimport { TimeLine } from \"./TimeLine\";\n\nexport function StartScreen() {\n    return (<div className=\"p-grid\">\n        <div className=\"p-col-10 p-offset-1\">\n            <TimeLine />\n        </div>\n\n    </div>)\n}","import React, { Component } from \"react\";\nimport { MegaMenu } from 'primereact/megamenu';\nimport { withRouter } from 'react-router'\n\nexport class Menu extends Component{\n    \n    \n    // See http://4youngpadawans.com/primereact-menubar-with-react-router/\n    navigateToPage = (path) => {\n\t\tthis.props.history.push(path);\n\t}\n\n    render(){\n        const items = [\n            {\n                label: 'Home', icon: 'pi pi-fw pi-home', command:()=>{ this.navigateToPage(process.env.PUBLIC_URL+'/') }, \n            },\n            {\n                label: 'An einem Benchmark teilnehmen', icon: 'pi pi-fw pi-file-excel', command:()=>{ this.navigateToPage(process.env.PUBLIC_URL+'/participate') }, \n            },\n            {\n                label: 'Benchmark erstellen', icon: 'pi pi-fw pi-cog', command:()=>{ this.navigateToPage(process.env.PUBLIC_URL+'/create') },\n            },\n            {\n                label: 'Architektur', icon: 'pi pi-fw pi-briefcase', command:()=>{this.navigateToPage(process.env.PUBLIC_URL+'/architecture')}\n            },\n            {\n                label: 'Impressum', icon: 'pi pi-fw pi-users', command:()=>{this.navigateToPage(process.env.PUBLIC_URL+'/imprint')}\n            }\n        ]\n        return(<MegaMenu  model={items} className=\"p-mb-4\" />)\n    }\n    \n}\n\n\nexport default withRouter(Menu)","import React, { Component, lazy, Suspense } from \"react\";\n// @ts-ignore\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\nimport { StartScreen } from \"components/StartScreen\";\nimport Menu from \"components/Menu\";\nimport { createBrowserHistory } from 'history';\nimport { Route, Router, Switch } from \"react-router\";\nimport { Toast } from 'primereact/toast';\nimport { BenchmarkClient } from \"BenchmarkClient\";\n\n\n\nlet History = createBrowserHistory();\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = { storageValue: 0, web3: null, accounts: null, contract: null, currentAccount: null, client: null };\n\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n\n    this.toast = React.createRef();\n  }\n\n  handleChainChanged(_chainId) {\n    // We recommend reloading the page, unless you must do otherwise\n    window.location.reload();\n  }\n\n  handleAccountsChanged(accounts) {\n    if (this.state) {\n      console.log(\"Accounts changed\", accounts, this.state.currentAccount)\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        this.showError('Please connect to MetaMask.');\n      } else if (accounts[0] !== this.state.currentAccount) {\n        this.setState({ currentAccount: accounts[0] })\n      }\n    } else {\n      console.log(\"React timing issue\", this, this.state)\n    }\n\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const { web3, ethereum, accounts } = await getWeb3();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      console.log(networkId)\n\n      this.setState({ web3, accounts, currentAccount: accounts[0], networkId, client: new BenchmarkClient(web3, accounts[0]) })\n\n      ethereum.on('chainChanged', this.handleChainChanged);\n      ethereum.on('accountsChanged', this.handleAccountsChanged);\n\n      // const deployedNetwork = SimpleStorageContract.networks[networkId];\n      // const instance = new BenchmarkClient(\"0x26912E00C4698e3F1E391B0806473e6F83033507\", web3)\n      /*\n            // Set web3, accounts, and contract to the state, and then proceed with an\n            // example of interacting with the contract's methods.\n            this.setState({ web3, accounts, contract: instance }, this.runExample);*/\n    } catch (error) {\n\n      if (typeof error === 'string') {\n        this.showPersistentError(\n          error,\n        );\n      } else {\n        // Catch any errors for any of the above operations.\n        this.showPersistentError(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n\n\n        console.error(error);\n      }\n\n    }\n  };\n\n\n  showError = (message) => {\n    this.toast.current.show({ severity: 'error', summary: 'Fehler', detail: message, life: 5000 });\n  }\n\n  showPersistentError = message => {\n    this.toast.current.show({ severity: 'error', summary: 'Fehler', detail: message, sticky: true });\n  }\n\n  showInfo = (message) => {\n    this.toast.current.show({ severity: 'info', summary: 'Info', detail: message, life: 5000 })\n  }\n\n\n  render() {\n    window.web3 = this.state.web3\n    const ParticipateScreen = lazy(() => import(\"components/BenchmarkParticipateScreen\"));\n    const BenchmarkCreationScreen = lazy(() => import(\"components/BenchmarkCreationScreen\"));\n    const ImprintScreen = lazy(() => import(\"components/ImprintScreen\"));\n    const ArchitectureScreen = lazy(() => import(\"components/ArchitectureScreen\"))\n    return (\n      <div className=\"App\">\n        <Toast ref={this.toast} />\n        {!this.state.web3 ? <p>See Error Message(s)</p> :\n          <Router history={History}>\n            <Menu />\n            <Suspense fallback={<div>Loading component...</div>}>\n              <Switch>\n                <Route path={`${process.env.PUBLIC_URL}/create`}>\n                  <BenchmarkCreationScreen web3={this.state.web3} currentAccount={this.state.currentAccount} client={this.state.client} />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/participate`}>\n                  <ParticipateScreen web3={this.state.web3} accounts={this.state.accounts} currentAccount={this.state.currentAccount} client={this.state.client} />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/imprint`}>\n                  <ImprintScreen />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/architecture`}>\n                  <ArchitectureScreen />\n                </Route>\n                <Route path={`${process.env.PUBLIC_URL}/`} exact>\n                  <StartScreen />\n                </Route>\n\n              </Switch>\n            </Suspense>\n          </Router>}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PrimeReact from 'primereact/api';\n\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nPrimeReact.ripple = true;\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mbn = exports.sqrt = exports.pow = exports.log2 = exports.log10 = exports.ln = exports.gm = exports.floor = exports.exp2 = exports.exp = exports.ceil = void 0;\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nvar mathjs_1 = require(\"mathjs\");\n\nvar config = {\n  number: \"BigNumber\",\n  precision: 79\n};\nvar math = mathjs_1.create(mathjs_1.all, config);\nvar mbn = math.bignumber;\nexports.mbn = mbn;\n\nfunction ceil(x) {\n  return mbn(x).ceil().toString();\n}\n\nexports.ceil = ceil;\n\nfunction exp(x) {\n  return mbn(x).exp().toString();\n}\n\nexports.exp = exp;\n\nfunction exp2(x) {\n  return math.pow(mbn(\"2\"), mbn(x)).toString();\n}\n\nexports.exp2 = exp2;\n\nfunction floor(x) {\n  return mbn(x).floor().toString();\n}\n\nexports.floor = floor;\n\nfunction gm(x, y) {\n  return math.sqrt(mbn(x).mul(mbn(y))).toString();\n}\n\nexports.gm = gm;\n\nfunction ln(x) {\n  return math.log(mbn(x)).toString();\n}\n\nexports.ln = ln;\n\nfunction log10(x) {\n  return math.log10(mbn(x)).toString();\n}\n\nexports.log10 = log10;\n\nfunction log2(x) {\n  return math.log2(mbn(x)).toString();\n}\n\nexports.log2 = log2;\n\nfunction pow(x, y) {\n  return math.pow(mbn(x), mbn(y)).toString();\n}\n\nexports.pow = pow;\n\nfunction sqrt(x) {\n  return math.sqrt(mbn(x)).toString();\n}\n\nexports.sqrt = sqrt;","import localforage from \"localforage\";\nimport { DateTime } from \"luxon\";\n\nconst attributes = [\"name\", \"description\", \"entries\", \"sum\", \"upper_bound\", \"lower_bound\", \"unit\", \"address\", \"contribution\", \"refresh\", \"actualized\"]\nconst timeOutMinutes = 10;\nexport class Synchronization {\n    \n\n    \n\n    static needsActualization(item) {\n        if (item.actualized) {\n            let actualized = DateTime.fromISO(item.actualized)\n            let current = DateTime.now();\n            let refresh = current.diff(actualized, \"minutes\")[\"minutes\"] > timeOutMinutes;\n            return { ...item, refresh }\n        } else {\n            return { ...item, refresh: true }\n        }\n    }\n\n    static async getAll() {\n        await localforage.ready();\n        const keys = await localforage.keys()\n        const entries = Array.from(new Set(keys.map(e => e.split('|')[0])))\n        const returnValues = entries.map(Synchronization.getItem)\n        console.log(returnValues, keys)\n        let all =  await Promise.all(returnValues)\n        return all;\n    }\n\n\n    static async getItem(address) {\n        await localforage.ready();\n        let data = await Promise.all(attributes.map(e => localforage.getItem(address + '|' + e)))\n        let foundData = {};\n\n        for (let i = 0; i < data.length; i++) {\n            const element = data[i];\n            foundData[attributes[i]] = element;\n        }\n        if (Object.keys(foundData).length > 1) {\n            return Synchronization.needsActualization(foundData)\n        } else {\n            return null;\n        }\n    }\n\n    static async addItem(data, contribution) {\n        await localforage.ready();\n        console.log(data, contribution)\n\n        if (!await Synchronization.getItem(data.address)) {\n            for (let i = 0; i < attributes.length; i++) {\n                const key = attributes[i];\n\n                await localforage.setItem(data.address + '|' + key, data[key])\n            }\n        }\n\n    }\n\n    static async removeItem(address) {\n        await localforage.ready();\n        try {\n            for (let i = 0; i < attributes.length; i++) {\n                const key = attributes[i];\n\n                await localforage.removeItem(address + '|' + key)\n            }\n        } catch (e) {\n\n        }\n\n    }\n\n    static async updateItem(item) {\n        await localforage.ready();\n        const foundItem = await Synchronization.getItem(item.address)\n\n        let updateItem = Synchronization.needsActualization({ ...foundItem, ...item, actualized: DateTime.now().toISO() })\n        \n        \n        for (let i = 0; i < attributes.length; i++) {\n            const key = attributes[i];\n\n            await localforage.setItem(updateItem.address + '|' + key, updateItem[key])\n        }\n    }\n\n\n    static async purge() {\n        await localforage.ready();\n        await localforage.clear();\n    }\n}\n\n","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SQRT_MAX_UD60x18_DIV_BY_SCALE = exports.SQRT_MAX_SD59x18_DIV_BY_SCALE = exports.SQRT_MAX_UD60x18 = exports.SQRT_MAX_SD59x18 = exports.SCALE = exports.PI = exports.MIN_WHOLE_SD59x18 = exports.MIN_SD59x18 = exports.MAX_WHOLE_UD60x18 = exports.MAX_WHOLE_SD59x18 = exports.MAX_UD60x18 = exports.MAX_SD59x18 = exports.HALF_SCALE = exports.EPSILON_MAGNITUDE = exports.EPSILON = exports.E = void 0;\n\nvar evm_fp_1 = __importDefault(require(\"evm-fp\"));\n\nvar numbers_1 = require(\"./numbers\");\n\nexports.E = \"2.718281828459045235\";\nexports.EPSILON = evm_fp_1.default(\"1e-6\");\nexports.EPSILON_MAGNITUDE = numbers_1.bn(\"1e6\");\nexports.HALF_SCALE = \"0.5\";\nexports.MAX_SD59x18 = \"57896044618658097711785492504343953926634992332820282019728.792003956564819967\";\nexports.MAX_UD60x18 = \"115792089237316195423570985008687907853269984665640564039457.584007913129639935\";\nexports.MAX_WHOLE_SD59x18 = \"57896044618658097711785492504343953926634992332820282019728\";\nexports.MAX_WHOLE_UD60x18 = \"115792089237316195423570985008687907853269984665640564039457\";\nexports.MIN_SD59x18 = \"-57896044618658097711785492504343953926634992332820282019728.792003956564819968\";\nexports.MIN_WHOLE_SD59x18 = \"-57896044618658097711785492504343953926634992332820282019728\";\nexports.PI = \"3.141592653589793238\";\nexports.SCALE = \"1\";\nexports.SQRT_MAX_SD59x18 = \"240615969168004511545033772477.625056927114980741\";\nexports.SQRT_MAX_UD60x18 = \"340282366920938463463374607431.768211455999999999\";\nexports.SQRT_MAX_SD59x18_DIV_BY_SCALE = \"240615969168004511545.033772477625056927\"; // biggest number whose square fits within int256\n\nexports.SQRT_MAX_UD60x18_DIV_BY_SCALE = \"340282366920938463463.374607431768211455\"; // biggest number whose square fits within uint256","import {MAX_UD60x18} from \"./dist/helpers/constants\"\nimport {mbn} from \"./dist/helpers/math\"\nimport { BigNumber, formatFixed } from \"@ethersproject/bignumber\";\nimport fp from \"evm-fp\";\n\n// @ts-ignore\nexport const toPrecision = (num) => {\n    if(typeof num === 'number'){\n        num = num+ \"\"\n    }\n    return BigNumber.from(fp(num, 18)).toString();\n}\n\n// @ts-ignore\nexport const fromPrecision = (numalike, number = true) => {\n    let formatted = formatFixed(numalike, 18);\n    if(number){\n        return +formatted\n    }else{\n        return formatted\n    }\n    \n}\n\n\nexport const isInBounds = (num) => {\n    const maxvalue = MAX_UD60x18\n    return mbn(0).lte(mbn(num)) && mbn(maxvalue).gte(mbn(num));\n}\n\nexport const maxSafeValueLength = MAX_UD60x18.length;\n\nexport const maxSafeValue = mbn(MAX_UD60x18).toNumber();\n\n\n","import { fromPrecision, toPrecision } from \"./numberUtil\";\n// @ts-ignore\nimport benchmarkContract from \"./contracts/BenchMark.json\";\nimport Web3 from \"web3\";\nimport { Synchronization } from \"Synchronization\";\n\nclass BlockChainInteractor {\n    web3;\n    constructor(web3) {\n        this.web3 = web3;\n    }\n    async executewithGas(method, from, call = true) {\n        let gasestimate = await method.estimateGas({ from });\n        let gasprice = await this.web3.eth.getGasPrice();\n        let round = (a) => a.toFixed(0);\n        if (!call) {\n            let send = await method.send({ from, gas: round(gasestimate * 1.5), gasPrice: round(+gasprice * 1.105) });\n            return send;\n        }\n        return await method.call({ from, gas: round(gasestimate * 1.5), gasPrice: round(+gasprice * 1.1) });\n    }\n\n    toWeirdString(str) {\n        return Web3.utils.padLeft(Web3.utils.toHex(str), 64)\n    }\n\n    async getAccounts() {\n        let [account] = await this.web3.eth.getAccounts();\n        return account;\n    }\n}\n\nexport class BenchmarkFactory extends BlockChainInteractor {\n    async provision(benchmarkName, lowerBound, upperBound, benchmarkUnit, desc) {\n        if (!benchmarkName || !lowerBound || !upperBound || !benchmarkUnit || !desc) {\n            throw new Error(\"Required parameters missing\")\n        }\n        console.log(benchmarkName, lowerBound, upperBound, benchmarkUnit, desc)\n        const BenchMark = new this.web3.eth.Contract(benchmarkContract.abi);\n        let deployerFn = await BenchMark.deploy({\n            data: benchmarkContract.bytecode,\n            arguments: [this.toWeirdString(benchmarkName), this.web3.utils.toHex(toPrecision(lowerBound)), this.web3.utils.toHex(toPrecision(upperBound)), this.toWeirdString(benchmarkUnit), this.toWeirdString(desc)],\n        });\n        const account = await this.getAccounts();\n        let returnValue = await this.executewithGas(deployerFn, account, false);\n        return new BenchmarkClient(this.web3, returnValue._address);\n    }\n}\n\nexport class BenchmarkClient extends BlockChainInteractor {\n    BenchMarkInstance = null;\n    address = null;\n    constructor(provider, address) {\n        super(provider);\n        this.BenchMarkInstance = new this.web3.eth.Contract(benchmarkContract.abi, address);\n        this.address = address\n    }\n    async getDetails(force = false) {\n        const storageItem = await Synchronization.getItem(this.address)\n\n        console.log(\"needs refresg\", storageItem)\n\n        if (!storageItem || storageItem.refresh || force) {\n            const account = await this.getAccounts();\n            const result = await this.executewithGas(this.BenchMarkInstance.methods.benchmark(), account);\n            console.log(\"Resalt\", result)\n            let response = { name: null, description: null, entries: null, sum: null, upper_bound: null, lower_bound: null, unit: null, address: null };\n            response.name = this.web3.utils.hexToUtf8(result.name);\n            response.description = this.web3.utils.hexToUtf8(result.description)\n            //@ts-ignore\n            response.entries = +result.entries.toString();\n            //@ts-ignore\n            response.sum = fromPrecision(result.sum);\n            //@ts-ignore\n            response.upper_bound = fromPrecision(result.upper_bound.toString());\n            //@ts-ignore\n            response.lower_bound = fromPrecision(result.lower_bound.toString());\n            response.unit = this.web3.utils.hexToUtf8(result.unit);\n            response.address = this.BenchMarkInstance._address;\n\n            if ((storageItem && storageItem.refresh === true) || force) {\n                await Synchronization.updateItem(response)\n            } else {\n                await Synchronization.addItem(response)\n            }\n\n\n            return response;\n        } else {\n            return storageItem;\n        }\n\n    }\n\n    getEmitter(){\n        return this.BenchMarkInstance.events.AggregateReady()\n    }\n\n    async participate(value) {\n        const account = await this.getAccounts();\n        const response =  await this.executewithGas(this.BenchMarkInstance.methods.participate(this.web3.utils.toHex(toPrecision(value))), account, false);\n        await Synchronization.updateItem({contribution: value, address: this.address})\n        return response;\n    }\n\n    async getResults(contribution) {\n        const internalContribution = toPrecision(contribution)\n        const account = await this.getAccounts();\n        let best = await this.executewithGas(this.BenchMarkInstance.methods.bestRating(internalContribution), account);\n        let average = await this.executewithGas(this.BenchMarkInstance.methods.average(), account);\n        let averageRated = await this.executewithGas(this.BenchMarkInstance.methods.averageRating(internalContribution), account);\n        return { best: parseInt(best), average: fromPrecision(average), averageRated: parseInt(averageRated) };\n        \n    }\n\n    static decodeErrorMessage(e){\n        if (e.message.includes(\"Internal JSON-RPC\")) {\n\n            if (e.message.includes(\"VM Exception while processing transaction: revert\")) {\n                let a = e.message.replace(\"VM Exception while processing transaction: revert\", \"Smart Contract Fehler:\")\n                let msg = JSON.parse(a.substring(25)).message\n                return msg;\n            } else {\n                let msg = JSON.parse(e.message.substring(25)).message\n                return msg;\n            }\n\n        }else{\n            return e.message;\n        }\n    }\n}","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bn = void 0;\n\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\n\nvar from_exponential_1 = __importDefault(require(\"from-exponential\"));\n\nfunction bn(x) {\n  var xs = x;\n\n  if (x.includes(\"e\")) {\n    xs = from_exponential_1.default(x);\n  }\n\n  return bignumber_1.BigNumber.from(xs);\n}\n\nexports.bn = bn;"],"sourceRoot":""}